@namespace RepositoryFramework.Web.Components.Standard
@using System.Reflection;
@using Blazorise
@using System.Collections;
@using System.Text.Json;
@using Blazorise.DataGrid
@typeparam T
@typeparam TKey where TKey: notnull
@inherits RepositoryBase<T, TKey>

@if (_entity != null)
{
    <Row>
        <Column>
            <Divider DividerType="DividerType.TextContent" Text="@Constant.Key" />
            @if (!typeof(TKey).IsPrimitive())
            {
                <InternalEdit Entity="_key" DisableEdit="!_isNew"></InternalEdit>
            }
            else
            {
                <div style="padding-top:15px;">
                    <InternalPrimitiveEdit Name="@Constant.Key" Value="@_key" T="TKey" Update="x => _key = (TKey)x" DisableEdit="!_isNew"></InternalPrimitiveEdit>
                </div>
            }
                <Switch TValue="bool" @bind-Checked="_isNew">
                    Edit key
                </Switch>
                @if (_isNew && !_isRequestedToCreateNew)
                {
                    <Alert Color="Color.Warning" Visible>
                        <AlertMessage>Warning!! Active it only if you want to copy an item.</AlertMessage>
                        <AlertDescription>If you active the key editing, and you change it, on save you will create a copy of this element with your new key.</AlertDescription>
                    </Alert>
                }
            <Divider DividerType="DividerType.TextContent" Text="@typeof(T).Name" />
            <InternalEdit Entity="_entity" DisableEdit="DisableEdit" PropertiesRetrieved="_propertiesRetrieved" Deep="1"></InternalEdit>
            @if (!DisableEdit)
            {
                <Divider DividerType="DividerType.Solid" />
                <Button Color="Color.Primary" Clicked="@(() => SaveAsync(false))">
                    <Blazorise.Icons.FontAwesome.Icon Name="IconName.Save"></Blazorise.Icons.FontAwesome.Icon>
                </Button>
                <Button Color="Color.Success" Clicked="@(() => SaveAsync(true))">
                    <Blazorise.Icons.FontAwesome.Icon Name="IconName.Save"></Blazorise.Icons.FontAwesome.Icon>
                    <Blazorise.Icons.FontAwesome.Icon Name="IconName.Forward"></Blazorise.Icons.FontAwesome.Icon>
                </Button>
            }
            @if (AllowDelete)
            {
                <Divider DividerType="DividerType.Solid" />
                <Button Color="Color.Danger" Clicked="@(() => CheckIfYouWantToDelete())">
                    <Blazorise.Icons.FontAwesome.Icon Name="IconName.Delete"></Blazorise.Icons.FontAwesome.Icon>
                </Button>
            }
        </Column>
    </Row>
    <Message Feedback="_feedback"></Message>
}