@namespace RepositoryFramework.Web.Components.Standard
@using System.Reflection;
@using Blazorise
@using System.Collections;
@using System.Text.Json;
@using Blazorise.DataGrid
@typeparam T
@typeparam TKey where TKey: notnull
@inherits RepositoryBase<T, TKey>

<DataGrid TItem="Entity<T, TKey>"
          Data="@_entities"
          @bind-SelectedRow="@_selectedEntity"
          ReadData="@OnReadData"
          TotalItems="@_totalItems"
          Editable="@CanEdit"
          EditMode="DataGridEditMode.Popup"
          UseInternalEditing="true"
          PageSize="PageSize"
          ShowPager="true"
          ShowPageSizes="true"
          Filterable="true"
          Responsive="true"
          PopupSize="ModalSize.Large"
          CommandMode="DataGridCommandMode.Default"
          Striped="true"
          Sortable="true">

    <DataGridCommandColumn NewCommandAllowed="CanEdit" EditCommandAllowed="CanEdit" DeleteCommandAllowed="CanEdit">
        <NewCommandTemplate>
            <Link To="@GetCreateUri()">
            <Icon Name="IconName.Add" />
            </Link>
        </NewCommandTemplate>
        <EditCommandTemplate>
            <Link To="@GetEditUri(context.Item.Key)">
            <Icon Name="IconName.Edit" />
            </Link>
        </EditCommandTemplate>
        <DeleteCommandTemplate>
            <Link To="@GetDeleteUri(context.Item.Key)">
            <Icon Name="IconName.Delete" />
            </Link>
        </DeleteCommandTemplate>
    </DataGridCommandColumn>

    <DataGridColumn Field="@nameof(_selectedEntity.Key)" Caption="#" Editable="EditableKey" Sortable="true">
        <DisplayTemplate>
            @if (context!.Key!.GetType().IsPrimitive())
            {
                @context.Key.ToString()
            }
            else
            {
                @context.Key.ToJson()
            }
        </DisplayTemplate>
    </DataGridColumn>

    @foreach (var value in PropertyTree.Primitives)
    {
        <DataGridColumn Field="@value.Label" Caption="@value.Label" Sortable="true" />
    }
    @foreach (var value in PropertyTree.Enumerables)
    {
        <DataGridColumn Field="@value.Label" Caption="@value.Label" Sortable="true" Filterable="false">
            <DisplayTemplate>
                <div>
                    <Accordion>
                        <Collapse Visible="_check[value.Label]">
                            <CollapseHeader>
                                <Heading Size="HeadingSize.Is5">
                                    <Button Clicked="@(()=>_check[value.Label] = !_check[value.Label])">
                                        @value.Count(context!.Value!)
                                    </Button>
                                </Heading>
                            </CollapseHeader>
                            <CollapseBody>
                                <Table Striped="true">
                                    <TableBody>
                                        @foreach (var item in value.AsEnumerable(context!.Value!))
                                        {
                                            var type = item.GetType();
                                            <TableRow>
                                                @if (type.IsPrimitive())
                                                {
                                                    <TableRowCell>
                                                        @item.ToString()
                                                    </TableRowCell>
                                                }
                                                else
                                                {
                                                    foreach (var innerItem in type.FetchProperties())
                                                    {
                                                        if (innerItem.PropertyType.IsPrimitive())
                                                        {
                                                            <TableRowCell>
                                                                @innerItem.GetValue(item)
                                                            </TableRowCell>
                                                        }
                                                        else
                                                        {
                                                            <TableRowCell>
                                                                @innerItem.GetValue(item).ToJson()
                                                            </TableRowCell>
                                                        }
                                                    }
                                                }
                                            </TableRow>
                                        }
                                    </TableBody>
                                </Table>
                            </CollapseBody>
                        </Collapse>
                    </Accordion>
                </div>
            </DisplayTemplate>
        </DataGridColumn>
    }
    @foreach (var property in PropertyTree.Complexes)
    {

    }
</DataGrid>