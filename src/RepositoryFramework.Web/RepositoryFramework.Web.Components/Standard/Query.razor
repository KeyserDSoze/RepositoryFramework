@namespace RepositoryFramework.Web.Components.Standard
@typeparam T
@typeparam TKey where TKey: notnull
@inherits RepositoryBase<T, TKey>

<RadzenDataGrid Data="@_entities"
                Count="@_totalItems"
                LoadData="@OnReadData"
                TItem="Entity<T, TKey>"
                AllowVirtualization="false"
                FilterMode="FilterMode.Advanced"
                ColumnWidth="200px"
                PageSize="@PageSize"
                IsLoading="@_isLoading"
                AllowFiltering="true"
                FilterCaseSensitivity="FilterCaseSensitivity.Default"
                LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true"
                AllowSorting="true">
    <Columns>
        <RadzenDataGridColumn TItem="Entity<T, TKey>" Property="Key" Title="Key">
            <Template Context="context">
                <RadzenLink Path="@GetEditUri(context.Key!)" Text="@GetKey(context)" />
            </Template>
        </RadzenDataGridColumn>
        @foreach (var value in TypeShowcase.FlatProperties)
        {
            if (value.Type != PropertyType.Enumerable)
            {
                <RadzenDataGridColumn TItem="Entity<T, TKey>" Property="@value.NavigationPath" Title="@value.NavigationPath" Sortable="true">
                    <Template Context="context">
                        @{
                            var stringedValue = value.Value(context.Value)?.ToString();
                        }
                        <RadzenButton class="bg-transparent text-dark p-0" Click="@((x) => Copy.CopyAsync(stringedValue))" MouseEnter="@((x) => ShowTooltip(x, stringedValue))" Text="@stringedValue" />
                    </Template>
                </RadzenDataGridColumn>
            }
            else
            {
                <RadzenDataGridColumn TItem="Entity<T, TKey>" Property="@value.NavigationPath" Title="@value.NavigationPath" Sortable="true" Filterable="false">
                    <Template Context="context">
                        @OpenEnumerableVisualizer(context!.Value, value)
                    </Template>
                </RadzenDataGridColumn>
            }
        }
    </Columns>
</RadzenDataGrid>

