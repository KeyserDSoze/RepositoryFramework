@namespace RepositoryFramework.Web.Components.Standard
@using Radzen;
@using Radzen.Blazor
@using System.Text;
@using System.Numerics;
@using System.Reflection;

@if (SearchValue != null)
{
    if (!PropertyUiSettings.HasValues())
    {
        if (SearchValue.BaseProperty.AssemblyType == typeof(bool) || SearchValue.BaseProperty.AssemblyType == typeof(bool?))
        {
            <Labeller Class="w-100">
                <Body>
                    <RadzenCheckBox class="form-control" Value="_booleanValue" TriState=true TValue="bool?" Change=@(args => BoolSearch(args, SearchValue.BaseProperty.AssemblyType == typeof(bool?))) />
                </Body>
                <First>
                    <RadzenButton Icon="close" Click="@((x) => BoolSearch(null, false))" />
                </First>
            </Labeller>
        }
        else if (SearchValue.BaseProperty.AssemblyType == typeof(DateTime) || SearchValue.BaseProperty.AssemblyType == typeof(DateTime?))
        {
            <Labeller Class="w-100" Text="@FromLabel">
                <Body>
                    <RadzenDatePicker class="form-control"
                          TValue="DateTime?"
                          Value="_dateTime.Start"
                          Change=@(args => DateTimeSearch(args, true))
                          DateFormat="yyyy/MM/dd" />
                    <RadzenDatePicker class="form-control"
                          TValue="DateTime?"
                          Value="_dateTime.End"
                          Change=@(args => DateTimeSearch(args, false))
                          DateFormat="yyyy/MM/dd" />
                </Body>
                <First>
                    <RadzenButton Icon="close" Click="@((x) => DateTimeSearch(null, true))" />
                </First>
            </Labeller>
        }
        else if (SearchValue.BaseProperty.AssemblyType == typeof(DateOnly) || SearchValue.BaseProperty.AssemblyType == typeof(DateOnly?))
        {
            <Labeller Class="w-100" Text="@FromLabel">
                <Body>
                    <RadzenDatePicker class="form-control"
                          TValue="DateOnly?"
                          Value="_date.Start"
                          Change=@(args => DateSearch(args, true))
                          DateFormat="yyyy/MM/dd" />
                    <RadzenDatePicker class="form-control"
                          TValue="DateOnly?"
                          Value="_date.End"
                          Change=@(args => DateSearch(args, false))
                          DateFormat="yyyy/MM/dd" />
                </Body>
                <First>
                    <RadzenButton Icon="close" Click="@((x) => DateSearch(null, true))" />
                </First>
            </Labeller>
        }
        else if (SearchValue.BaseProperty.AssemblyType.IsNumeric())
        {
            <div class="w-100 row">
                <input type="number" class="form-control col" @onchange="@(args => NumberSearch(args, true))" />
                <input type="number" class="form-control col" @onchange="@(args => NumberSearch(args, false))" />
            </div>
        }
        else
        {
            <RadzenTextBox class="form-control" Value="@_stringValue" Change="@(args => Contains(args?.ToString()))" />
        }
    }
    else
    {
        <SelectMultipleDropdown 
            Class="form-control"
            PossibleValues="@PropertyUiSettings.Values"
            SelectedKeys="@_optionKeys"
            OnChange="@(async (x) => MultipleChoices(x))"
        />
    }
}