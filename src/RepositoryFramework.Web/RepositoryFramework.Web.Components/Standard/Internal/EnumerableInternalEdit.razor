@namespace RepositoryFramework.Web.Components.Standard
@using Radzen.Blazor
@using Radzen;

@if (_entities != null)
{
    var counter = 0;
    @if (!_propertyUiSettings.HasValues())
    {
        foreach (var entity in _entities)
        {
            <div class="row">
                <div class="col">
                    @if (BaseProperty.Type != PropertyType.Primitive)
                    {
                        <InternalEdit BaseProperty="@BaseProperty.NonPrimitives.First()" />
                    }
                    else
                    {
                        var index = counter;
                        <InternalPrimitiveEdit BaseProperty="@BaseProperty.NonPrimitives.First()" />
                    }
                </div>
                @{
                    counter++;
                }
            </div>
        }
    }
    else
    {
        <InternalMultiSelectEdit Name="@BaseProperty.Self.Name"
            Update="@((object x) => Update((IEnumerable<T>)x))" PropertyUiSettings="@PropertyUiSettings">
        </InternalMultiSelectEdit>
    }
    @if (EditParametersBearer.CanEdit(BaseProperty) && !_propertyUiSettings.HasValues())
    {
        <RadzenButton Click="x => New()" Icon="add" />
    }
}
<ErrorCatcher Error="@_error" />