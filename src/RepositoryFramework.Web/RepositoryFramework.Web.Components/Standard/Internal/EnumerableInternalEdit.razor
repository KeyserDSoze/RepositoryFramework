@namespace RepositoryFramework.Web.Components.Standard
@using Radzen.Blazor
@using Radzen;
@typeparam T

@if (Entities != null)
{
    var counter = 0;
    @if (!PropertyUiSettings.HasValues())
    {
        foreach (var entity in Entities)
        {
            <div class="row">
                <div class="col">
                    @if (TypeShowcase != null)
                    {
                        <InternalEdit Entity="entity" DisableEdit="DisableEdit" NavigationPath="@GetNextNavigationPath()"
                            T="T" PropertiesUiSettings="PropertiesUiSettings" Deep="Deep + 1">
                        </InternalEdit>
                    }
                    else
                    {
                        var index = counter;
                        <InternalPrimitiveEdit Name="@($"{index + 1}.")" Value="entity" T="T" DisableEdit="DisableEdit"
                               Update="@((object x) => Update(index, (T)x))" PropertyUiSettings="@PropertyUiSettings"
                               Delete="@(() => Delete(index))">
                        </InternalPrimitiveEdit>
                    }
                </div>
                @{
                    counter++;
                }
            </div>
        }
    }
    else
    {
        <InternalMultiSelectEdit Name="@Property.Self.Name" Values="Entities" T="T" DisableEdit="DisableEdit"
                         Update="@((object x) => Update((IEnumerable<T>)x))" PropertyUiSettings="@PropertyUiSettings">
        </InternalMultiSelectEdit>
    }
    @if (!DisableEdit && !PropertyUiSettings.HasValues())
    {
        <RadzenButton Click="x => New()" Icon="add" />
    }
}