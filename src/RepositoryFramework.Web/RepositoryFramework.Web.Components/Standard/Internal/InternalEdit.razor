@namespace RepositoryFramework.Web.Components.Standard
@typeparam T

@if (Entity != null)
{
    <div class="@_containerClass">
        @if (_entitySettings?.HasDefault == true)
        {
            <div class="text-center mb-2 w-100">
                @if (_restorableValue == null)
                {
                    <RadzenButton Click=@(args => SetDefault()) Text="Set default" ButtonStyle="ButtonStyle.Primary" />
                }
                else
                {
                    <RadzenButton Click=@(args => Restore()) Text="Restore" ButtonStyle="ButtonStyle.Warning" />
                }
            </div>
        }
        @foreach (var value in TypeShowcase.Primitives)
        {
            @LoadPrimitiveEdit(value)
        }
    </div>
    @if (TypeShowcase.NonPrimitives.Count > 0)
    {
        <div class="row row-cols">
            <RadzenTabs SelectedIndex="0">
                <Tabs>
                    @foreach (var value in TypeShowcase.NonPrimitives)
                    {
                        var propertySettings = GetPropertySettings(value);
                        <RadzenTabsItem Text="@value.Self.Name">
                            @if (value.Type == PropertyType.Enumerable && propertySettings?.HasDefault == true)
                            {
                                <div class="text-center mt-4 mb-2">
                                    @if (!_restorableValues.ContainsKey(value.NavigationPath))
                                    {
                                        if (propertySettings.Default != null)
                                        {
                                            <RadzenButton Click=@(args => SetDefault(value, propertySettings.Default)) Text="Set default" ButtonStyle="ButtonStyle.Primary" />
                                        }
                                        else
                                        {
                                            <RadzenButton Click=@(args => SetDefaultWithKeyAsync(value, propertySettings)) Text="Set default" ButtonStyle="ButtonStyle.Primary" />
                                        }
                                    }
                                    else
                                    {
                                        <RadzenButton Click=@(args => Restore(value)) Text="Restore" ButtonStyle="ButtonStyle.Warning" />
                                    }
                                </div>
                            }
                            <div class="col-12">
                                @LoadNext(value)
                            </div>
                        </RadzenTabsItem>
                    }
                </Tabs>
            </RadzenTabs>
        </div>
    }
}
<ErrorCatcher Error="@Error" />