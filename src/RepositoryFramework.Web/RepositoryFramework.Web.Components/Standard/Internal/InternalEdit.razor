@namespace RepositoryFramework.Web.Components.Standard

@if (EditParametersBearer != null)
{
    <div class="@_containerClass">
        @foreach (var baseProperty in BaseProperty.Primitives)
        {
            <InternalPrimitiveEdit BaseProperty="@baseProperty" Indexes="@Indexes" ForceNotEditable="@ForceNotEditable" />
        }
    </div>
    @if (BaseProperty.NonPrimitives.Count > 0)
    {
        <div class="row row-cols">
            <RadzenTabs SelectedIndex="0">
                <Tabs>
                    @foreach (var baseProperty in BaseProperty.NonPrimitives)
                    {
                        <RadzenTabsItem Text="@baseProperty.Self.Name">
                            <DefaultButton BaseProperty="@baseProperty" Class="text-center mt-4 mb-2" Indexes="@Indexes" ForceNotEditable="@ForceNotEditable" />
                            <div class="col-12">
                                @if (baseProperty.Type == PropertyType.Complex)
                                {
                                    <InternalEdit BaseProperty="@baseProperty" Indexes="@Indexes" ForceNotEditable="@ForceNotEditable" />
                                }
                                else
                                {
                                    <EnumerableInternalEdit BaseProperty="@baseProperty" Indexes="@Indexes" ForceNotEditable="@ForceNotEditable" />
                                }
                            </div>
                        </RadzenTabsItem>
                    }
                </Tabs>
            </RadzenTabs>
        </div>
    }
}

@code {
    [CascadingParameter(Name = Constant.EditParametersBearer)]
    public EditParametersBearer EditParametersBearer { get; set; }
    [Parameter]
    public BaseProperty BaseProperty { get; set; }
    [Parameter]
    public int[]? Indexes { get; set; }
    [Parameter]
    public bool ForceNotEditable { get; set; }
    private string? _containerClass;
    protected override void OnParametersSet()
    {
        _containerClass = BaseProperty.Deep > 3 ? "row row-cols-1" : "row row-cols-1 row-cols-lg-2";
        base.OnParametersSet();
    }
}